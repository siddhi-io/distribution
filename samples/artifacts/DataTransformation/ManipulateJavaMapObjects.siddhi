@APP:name("ManipulateJavaMapObjects")

@App:description('Create a map, insert values into the map and checks if the given object is a map or not')

/*

Purpose:
	This function creates a map, add values and checks whether the given object is a map or not. Map objects can be passed through Siddhi object data type

Prerequisites:
    * Save this sample. The following messages would be shown on the console
	     * - Siddhi App ManipulateJavaMapObjects successfully deployed.

Executing the Sample:
	1) Start the Siddhi application by clicking on 'Run'
	2) If the Siddhi application starts successfully, the following messages would be shown on the console
            * ManipulateJavaMapObjects.siddhi - Started Successfully!

Testing the Sample:
    You can publish data event to the file, through event simulator
        a) Open event simulator by clicking on the second icon or press Ctrl+Shift+I.
    	b) In the Single Simulation tab of the panel, select values as follows:
                * Siddhi App Name  : ManipulateJavaMapObjects
                * Stream Name     : SweetProductionStream
        c) Enter following values in the fields and send
                name: chocolate cake
                amount: 50.50

Viewing the Results:
    Messages similar to the following would be shown on the console.
        INFO {io.siddhi.core.stream.output.sink.LogSink} - ManipulateJavaMapObjects : CheckedMapStream : Event{timestamp=1569840535741, data=[true, false], isExpired=false}
*/

@sink(type = 'log')
define stream CheckedMapStream(isMap1 bool, isMap2 bool);

define stream SweetProductionStream (name string, amount double);

@info(name = 'map-create')
from SweetProductionStream
select name, amount, map:create() as tmpMap
insert into TmpStream;

@info(name = 'map-insert')
from TmpStream
select name, amount, map:put(tmpMap, name, amount) as map1
insert into OutputStream;

@info(name = 'map-check')
from OutputStream
select map:isMap(map1) as isMap1, map:isMap(name) as isMap2
insert into CheckedMapStream;

@App:name("StringTransformation")
@App:description('Performs string transformation functions.')

/*

Purpose:
	This String function converts the string value to lowercase letters, returns the length of the string value and returns the char value at the 1st index of the string

Prerequisites:
    * Save this sample. If there is no syntax error, the following messages would be shown on the console
	     * - Siddhi App StringExtensionSample successfully deployed.

Executing the Sample:
	1) Start the Siddhi application by clicking on 'Run'
	2) If the Siddhi application starts successfully, the following messages would be shown on the console
            * StringTransformation.siddhi - Started Successfully!

Testing the Sample:
    You can publish data event to the file, through event simulator
        a) Open event simulator by clicking on the second icon or press Ctrl+Shift+I.
    	b) In the Single Simulation tab of the panel, select values as follows:
                * Siddhi App Name  : StringTransformation
                * Stream Name      : SweetProductionStream
        c) Enter following values in the fields and send
                name: CaKe
                amount: 55.6

Viewing the Results:
    Messages similar to the following would be shown on the console.
        INFO {io.siddhi.core.stream.output.sink.LogSink} - StringTransformation : OutputStream : Event{timestamp=1568616025618, data=[cake, 4, a, 55.6], isExpired=false}
*/

define stream SweetProductionStream (name string, amount double);

@sink(type = 'log')
define stream OutputStream(lowerName string, length int, charAtName string, amount double);

from SweetProductionStream
select str:lower(name) as lowerName, str:length(name) as length, str:charAt(name, 1) as charAtName, amount
insert into OutputStream;

@App:name("Logging")
@App:description("The logger logs the message on the given priority with or without processed event.")

/*

Purpose:
    This application demonstrates how to use logging in siddhi.

Executing the Sample:
    1) Start the Siddhi application by clicking on 'Run'
    2) If the Siddhi application starts successfully, the following messages would be shown on the console
        * Logging.siddhi - Started Successfully!.

Testing the Sample:
    1) Click on 'Event Simulator' (double arrows on left tab)
    2) Click 'Single Simulation' (this will be already selected)
    3) Select 'Logging' as Siddhi App Name
    4) Select 'EventStream' as StreamName
    5) Provide attribute values
        - symbol: item1
        - price : 10
    6) Send event

Viewing the Results:
    See the input and respective output on the console similar to the following (timestamp will be different).

        INFO {io.siddhi.core.query.processor.stream.LogStreamProcessor} - Logging: Sample Event :, StreamEvent{ timestamp=1568624229375, beforeWindowData=null, onAfterWindowData=null, outputData=[item1, 10.0], type=CURRENT, next=null}
        INFO {io.siddhi.core.query.processor.stream.LogStreamProcessor} - Logging: Sample Event :, StreamEvent{ timestamp=1568624229375, beforeWindowData=null, onAfterWindowData=null, outputData=[item1, 10.0], type=CURRENT, next=null}
        INFO {io.siddhi.core.query.processor.stream.LogStreamProcessor} - Logging: Sample Event :
        INFO {io.siddhi.core.query.processor.stream.LogStreamProcessor} - Logging: StreamEvent{ timestamp=1568624229375, beforeWindowData=null, onAfterWindowData=null, outputData=[item1, 10.0], type=CURRENT, next=null}
        INFO {io.siddhi.core.query.processor.stream.LogStreamProcessor} - Logging: Sample Event :, StreamEvent{ timestamp=1568624229375, beforeWindowData=null, onAfterWindowData=null, outputData=[item1, 10.0], type=CURRENT, next=null}
*/

define stream EventStream(symbol string, price float);

-- This will log as INFO with the message "Sample Event :" + EventStream:events.
from EventStream#log("INFO", "Sample Event :", true)
select *
insert into OutputStream;

-- This will logs with default log level as INFO.
from EventStream#log("Sample Event :", true)
select *
insert into OutputStream;

-- This will only log message.
from EventStream#log("Sample Event :", false)
select *
insert into OutputStream;

-- This will only log EventStream:events.
from EventStream#log(true)
select *
insert into OutputStream;

-- This will log message and EventStream:events.
from EventStream#log("Sample Event :")
select *
insert into OutputStream;

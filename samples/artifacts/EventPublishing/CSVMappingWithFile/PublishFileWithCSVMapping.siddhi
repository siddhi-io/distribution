@App:name("PublishFileWithCSVMapping")

@App:description('Publish data events processed within Siddhi to files in CSV default format.')

/*

Purpose:
	This application demonstrates how to configure a Siddhi application to publish data events processed within Siddhi to files in CSV format.

Prerequisites:
    * Edit the file.uri '{SiddhiHome}/samples/artifacts/CSVMappingWithFile/new/outputOfDefault.csv' by replacing {SiddhiHome} with the absolute path of your Siddhi home directory to publish your event files.

	* Save this sample. If there is no syntax error, the following messages would be shown on the console:
	     * - PublishFileWithCSVMapping.siddhi successfully deployed.

Executing the sample:
	1) Start the Siddhi application by clicking on 'Run'.
	2) If the Siddhi application starts successfully, the following messages are shown on the console:
            * PublishFileWithCSVMapping.siddhi - Started Successfully!

Testing the Sample:
     You may send events via event simulator
            a) Open the event simulator by clicking on the second icon on the left or pressing Ctrl+Shift+I.
            b) In the Single Simulation tab of the panel, specify the values as follows:
                * Siddhi App Name  : PublishFileWithCSVMapping
                * Stream Name      : InputStream
            c) In the name and amount fields, enter the following and then click "Send" to send the event.
                id: 3
                name: PG
                amount: 5.5
            d) Send some more events.

Viewing the Results:
	Sink produces the output to outputOfDefault.csv in CSV custom format.
		outputOfCustom.csv's data appear in below format
			1,WSO2,100.0
			2,IBM,2.5
			3,PG,5.5

*/

define stream InputStream (id int, name string, amount double);

@sink(type='file', file.uri='{SiddhiHome}/samples/artifacts/CSVMappingWithFile/new/outputOfDefault.csv' , @map(type='csv'))
define stream OutputStream (id int, name string, amount double);

from InputStream
select *
insert into OutputStream;

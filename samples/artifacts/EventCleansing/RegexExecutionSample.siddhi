@App:name("RegexExecutionSample")

@App:description('Matches if a text contains a specific word.')

/*
Purpose:
	This function matches the input with a regex pattern.

Prerequisites:
    * Save this sample. If there is no syntax error, the following messages would be shown on the console
	     * - Siddhi App RegexExecutionSample successfully deployed.

Executing the Sample:
	1) Start the Siddhi application by clicking on 'Run'
	2) If the Siddhi application starts successfully, the following messages would be shown on the console
            * RegexExecutionSample.siddhi - Started Successfully!

Testing the Sample:
  You can publish data event to the file, through event simulator
        a) Open event simulator by clicking on the second icon or press Ctrl+Shift+I.
    	b) In the Single Simulation tab of the panel, select values as follows:
                * Siddhi App Name  : RegexExecutionSample
                * Stream Name     : SweetProductionStream
        c) Enter following values in the fields and send
                name: chocolate cake
        d) Enter following values in the fields and send
                name: coffee cake

Viewing the Results:
  Viewing the Results:
    Messages similar to the following would be shown on the console.
        INFO {io.siddhi.core.stream.output.sink.LogSink} - RegexExecutionSample : ChocolateProductStream : Event{timestamp=1568282572137, data=[chocolate cake, true], isExpired=false}
        INFO {io.siddhi.core.stream.output.sink.LogSink} - RegexExecutionSample : ChocolateProductStream : Event{timestamp=1568282591377, data=[coffee cake, false], isExpired=false}
*/

define stream SweetProductionStream (name string);

@sink(type='log')
define stream ChocolateProductStream(name string, isAChocolateProduct bool);

-- Matches the inputs begin with the word 'chocolate'
from SweetProductionStream
select name, regex:matches('chocolate(.*)', name) as isAChocolateProduct
insert into ChocolateProductStream;

